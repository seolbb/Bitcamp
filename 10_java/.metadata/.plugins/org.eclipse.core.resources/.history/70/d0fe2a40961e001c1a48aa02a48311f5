package algorithm;
//여러 개의 수가 정렬된 순서로 있을 때 특정한 수를 찾는 방법
//단순 반복문을 이용하면 수의 개수에 따라 비교 횟수가 증가하는 O(n)의 수행이 이루어짐
//수가 정렬된 상태에서는 이진 탐색(binary search)을 활용하면 매번 비교되는 요소의 수가 절반으로 감소될 수 있으므로 O(logN)의 수행으로 원하는 수를 찾을 수 있음
//수의 예 : [12, 25, 31, 48, 54, 66, 70, 83, 95, 108]
//83의 위치를 찾아보세요
//88의 위치를 찾아보세요
public class ex02 {

	public static void main(String[] args) {
		
		int[] num = {12, 25, 31, 48, 54, 66, 70, 83, 95, 108};
		
		int userNum = 83;
		int numPos = 0;
		
		for(int i = 0; i < num.length; i++) {
			if(userNum == num[i]) {
				numPos = i+1;
				System.out.println(userNum + "는 " + numPos + "번째 위치에 있습니다.");
				break;
			} else {
				System.out.println(userNum + "는" + "존재하지않습니다.");
				break;
			}
		}
		

	}

}
